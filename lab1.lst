CCS PCM C Compiler, Version 4.074, 22034               06-Jun-22 10:25

               Filename: lab1.lst

               ROM used: 193 words (2%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         8 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include<16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #DEVICE *=16 ADC=10  
.................... #FUSES HS,NOWDT,NOPUT,NOLVP  
.................... #USE DELAY(CLOCK=16M)  
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  05
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  2E
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETLW  00
.................... #include<luutinh.h> 
.................... // register definitions 
....................  
....................  
.................... #use fast_io(b) 
.................... #use fast_io(a) 
.................... #use fast_io(c) 
.................... #use fast_io(d) 
.................... #use fast_io(e) 
.................... #use rs232(baud=19200,parity=n,xmit=pin_C6,rcv=pin_c7,bits=9) 
.................... #define W 0 
.................... #define F 1 
....................  
.................... // register files 
.................... #byte INDF          =0x00 
.................... #byte TMR0          =0x01 
.................... #byte PCL           =0x02 
.................... #byte STATUS        =0x03 
.................... #byte FSR           =0x04 
.................... #byte PORTA         =0x05 
.................... #byte PORTB         =0x06 
.................... #byte PORTC         =0x07 
.................... #byte PORTD         =0x08 
.................... #byte PORTE         =0x09 
....................  
.................... #byte EEDATA        =0x10C 
.................... #byte EEADR         =0x10D 
.................... #byte EEDATH        =0x10E 
.................... #byte EEADRH         =0x10F 
.................... #byte ADCON0     =0x1F 
.................... #byte ADCON1     =0x9F 
.................... #byte ADRESH     =0x9F 
.................... #byte ADSESL     =0x9F 
....................  
.................... #byte PCLATH        =0x0a 
.................... #byte INTCON        =0x0b 
.................... #byte PIR1    =0x0c 
.................... #byte PIR2    =0x0d 
.................... #byte PIE1    =0x8c 
.................... #byte PIE2    =0x8d 
....................  
.................... #byte OPTION_REG    =0x81 
.................... #byte TRISA         =0x85 
.................... #byte TRISB         =0x86 
.................... #byte TRISC         =0x87 
.................... #byte TRISD         =0x88 
.................... #byte TRISE         =0x89 
....................  
.................... #byte EECON1        =0x18C 
.................... #byte EECON2        =0x18D 
....................  
.................... //DINH NGHIA BIT 
.................... #bit RA5   =0x05.5 
.................... #bit RA4   =0x05.4 
.................... #bit RA3   =0x05.3 
.................... #bit RA2   =0x05.2 
.................... #bit RA1   =0x05.1 
.................... #bit RA0   =0x05.0 
....................  
.................... #bit RB7   =0x06.7 
.................... #bit RB6   =0x06.6 
.................... #bit RB5   =0x06.5 
.................... #bit RB4   =0x06.4 
.................... #bit RB3   =0x06.3 
.................... #bit RB2   =0x06.2 
.................... #bit RB1   =0x06.1 
.................... #bit RB0   =0x06.0 
....................  
.................... #bit RC7   =0x07.7 
.................... #bit RC6   =0x07.6 
.................... #bit RC5   =0x07.5 
.................... #bit RC4   =0x07.4 
.................... #bit RC3   =0x07.3 
.................... #bit RC2   =0x07.2 
.................... #bit RC1   =0x07.1 
.................... #bit RC0   =0x07.0 
....................  
.................... #bit RD7   =0x08.7 
.................... #bit RD6   =0x08.6 
.................... #bit RD5   =0x08.5 
.................... #bit RD4   =0x08.4 
.................... #bit RD3   =0x08.3 
.................... #bit RD2   =0x08.2 
.................... #bit RD1   =0x08.1 
.................... #bit RD0   =0x08.0 
....................  
.................... #bit RE2   =0x09.2 
.................... #bit RE1   =0x09.1 
.................... #bit RE0   =0x09.0 
....................  
....................  
.................... #bit TRISA5   =0x85.5 
.................... #bit TRISA4   =0x85.4 
.................... #bit TRISA3   =0x85.3 
.................... #bit TRISA2   =0x85.2 
.................... #bit TRISA1   =0x85.1 
.................... #bit TRISA0   =0x85.0 
....................  
.................... #bit TRISB7   =0x86.7 
.................... #bit TRISB6   =0x86.6 
.................... #bit TRISB5   =0x86.5 
.................... #bit TRISB4   =0x86.4 
.................... #bit TRISB3   =0x86.3 
.................... #bit TRISB2   =0x86.2 
.................... #bit TRISB1   =0x86.1 
.................... #bit TRISB0   =0x86.0 
....................  
.................... #bit TRISC7   =0x87.7 
.................... #bit TRISC6   =0x87.6 
.................... #bit TRISC5   =0x87.5 
.................... #bit TRISC4   =0x87.4 
.................... #bit TRISC3   =0x87.3 
.................... #bit TRISC2   =0x87.2 
.................... #bit TRISC1   =0x87.1 
.................... #bit TRISC0   =0x87.0 
....................  
.................... #bit TRISD7   =0x88.7 
.................... #bit TRISD6   =0x88.6 
.................... #bit TRISD5   =0x88.5 
.................... #bit TRISD4   =0x88.4 
.................... #bit TRISD3   =0x88.3 
.................... #bit TRISD2   =0x88.2 
.................... #bit TRISD1   =0x88.1 
.................... #bit TRISD0   =0x88.0 
....................  
.................... #bit TRISE2   =0x89.2 
.................... #bit TRISE1   =0x89.1 
.................... #bit TRISE0   =0x89.0 
....................  
.................... // INTCON Bits for C 
.................... #bit gie    = 0x0b.7 
.................... #bit peie = 0x0b.6 
.................... #bit tmr0ie = 0x0b.5 
.................... #bit int0ie = 0x0b.4 
.................... #bit rbie   = 0x0b.3 
.................... #bit tmr0if    = 0x0b.2 
.................... #bit int0if    = 0x0b.1 
.................... #bit rbif    = 0x0b.0 
....................  
.................... // PIR1 for C 
.................... #bit pspif  = 0x0c.7 
.................... #bit adif    = 0x0c.6 
.................... #bit rcif    = 0x0c.5 
.................... #bit txif    = 0x0c.4 
.................... #bit sspif    = 0x0c.3 
.................... #bit ccp1if    = 0x0c.2 
.................... #bit tmr2if    = 0x0c.1 
.................... #bit tmr1if    = 0x0c.0 
....................  
.................... //PIR2 for C 
.................... #bit cmif    = 0x0d.6 
.................... #bit eeif    = 0x0d.4 
.................... #bit bclif  = 0x0d.3 
.................... #bit ccp2if    = 0x0d.0 
....................  
.................... // PIE1 for C 
.................... #bit adie    = 0x8c.6 
.................... #bit rcie    = 0x8c.5 
.................... #bit txie    = 0x8c.4 
.................... #bit sspie    = 0x8c.3 
.................... #bit ccp1ie    = 0x8c.2 
.................... #bit tmr2ie    = 0x8c.1 
.................... #bit tmr1ie    = 0x8c.0 
....................  
.................... //PIE2 for C 
.................... #bit osfie    = 0x8d.7 
.................... #bit cmie    = 0x8d.6 
.................... #bit eeie   = 0x8d.4 
....................  
.................... // OPTION Bits 
.................... #bit not_rbpu   = 0x81.7 
.................... #bit intedg     = 0x81.6 
.................... #bit t0cs       = 0x81.5 
.................... #bit t0se       = 0x81.4 
.................... #bit psa        = 0x81.3 
.................... #bit ps2        = 0x81.2 
.................... #bit ps1        = 0x81.1 
.................... #bit ps0        = 0x81.0 
....................  
.................... // EECON1 Bits 
.................... #bit eepgd   = 0x18c.7 
.................... #bit free      = 0x18C.4 
.................... #bit wrerr     = 0x18C.3 
.................... #bit wren       = 0x18C.2 
.................... #bit wr         = 0x18C.1 
.................... #bit rd         = 0x18C.0 
....................  
.................... //ADCON0 
.................... #bit CHS0    =0x1F.3 
.................... #bit CHS1    =0x1F.4 
.................... #bit CHS2    =0x1F.5 
.................... // uast 
.................... #byte txreg=0x19 
.................... #byte rc=0x1a 
.................... #byte spbrg=0x99 
.................... #bit  rxd=0x18.0 
.................... #bit  spen=0x18.7 
....................  
.................... #byte txsta=0x98 
.................... #bit  master=0x98.7 
.................... #bit  phat =0x98.4 
.................... #bit txen=0x98.5 
.................... #bit tx9=0x98.6 
....................  
.................... //=====SPI 
.................... #byte SSPBUF= 0X13 
.................... #byte SSPCON =0X14 
.................... #bit SSPEN =0X14.5 
....................  
.................... //#pwm 
.................... #byte dc1=0x15 
....................  
....................  
.................... void main() 
.................... { 
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  BSF    03.5
001E:  BSF    03.6
001F:  BCF    07.3
0020:  MOVLW  0C
0021:  BCF    03.6
0022:  MOVWF  19
0023:  MOVLW  E2
0024:  MOVWF  18
0025:  MOVLW  D0
0026:  BCF    03.5
0027:  MOVWF  18
0028:  BSF    03.5
0029:  BSF    03.6
002A:  MOVF   09,W
002B:  ANDLW  C0
002C:  MOVWF  09
002D:  BCF    03.6
002E:  BCF    1F.4
002F:  BCF    1F.5
0030:  MOVLW  00
0031:  BSF    03.6
0032:  MOVWF  08
0033:  BCF    03.5
0034:  CLRF   07
0035:  CLRF   08
0036:  CLRF   09
.................... set_tris_b(0x00);  // khai bao port b la output  
0037:  MOVLW  00
0038:  BSF    03.5
0039:  BCF    03.6
003A:  MOVWF  06
.................... set_tris_a(0b00000000);  
003B:  MOVWF  05
.................... set_tris_c(0b00000000);  
003C:  MOVWF  07
.................... set_tris_d(0b00000000);  
003D:  MOVWF  08
.................... set_tris_e(0b00000000);  
003E:  BCF    09.0
003F:  BCF    09.1
0040:  BCF    09.2
.................... while(TRUE){ 
.................... output_b(0x00); 
0041:  BCF    03.5
0042:  CLRF   06
.................... delay_ms(500); 
0043:  MOVLW  02
0044:  MOVWF  21
0045:  MOVLW  FA
0046:  MOVWF  22
0047:  CALL   004
0048:  DECFSZ 21,F
0049:  GOTO   045
.................... output_b(0x11); 
004A:  MOVLW  11
004B:  MOVWF  06
.................... delay_ms(500); 
004C:  MOVLW  02
004D:  MOVWF  21
004E:  MOVLW  FA
004F:  MOVWF  22
0050:  CALL   004
0051:  DECFSZ 21,F
0052:  GOTO   04E
.................... output_b(0x22); 
0053:  MOVLW  22
0054:  MOVWF  06
.................... delay_ms(500); 
0055:  MOVLW  02
0056:  MOVWF  21
0057:  MOVLW  FA
0058:  MOVWF  22
0059:  CALL   004
005A:  DECFSZ 21,F
005B:  GOTO   057
.................... output_b(0x33); 
005C:  MOVLW  33
005D:  MOVWF  06
.................... delay_ms(500); 
005E:  MOVLW  02
005F:  MOVWF  21
0060:  MOVLW  FA
0061:  MOVWF  22
0062:  CALL   004
0063:  DECFSZ 21,F
0064:  GOTO   060
.................... output_b(0x44); 
0065:  MOVLW  44
0066:  MOVWF  06
.................... delay_ms(500); 
0067:  MOVLW  02
0068:  MOVWF  21
0069:  MOVLW  FA
006A:  MOVWF  22
006B:  CALL   004
006C:  DECFSZ 21,F
006D:  GOTO   069
.................... output_b(0x55); 
006E:  MOVLW  55
006F:  MOVWF  06
.................... delay_ms(500); 
0070:  MOVLW  02
0071:  MOVWF  21
0072:  MOVLW  FA
0073:  MOVWF  22
0074:  CALL   004
0075:  DECFSZ 21,F
0076:  GOTO   072
.................... output_b(0x66); 
0077:  MOVLW  66
0078:  MOVWF  06
.................... delay_ms(500); 
0079:  MOVLW  02
007A:  MOVWF  21
007B:  MOVLW  FA
007C:  MOVWF  22
007D:  CALL   004
007E:  DECFSZ 21,F
007F:  GOTO   07B
.................... output_b(0x77); 
0080:  MOVLW  77
0081:  MOVWF  06
.................... delay_ms(500); 
0082:  MOVLW  02
0083:  MOVWF  21
0084:  MOVLW  FA
0085:  MOVWF  22
0086:  CALL   004
0087:  DECFSZ 21,F
0088:  GOTO   084
.................... output_b(0x88); 
0089:  MOVLW  88
008A:  MOVWF  06
.................... delay_ms(500); 
008B:  MOVLW  02
008C:  MOVWF  21
008D:  MOVLW  FA
008E:  MOVWF  22
008F:  CALL   004
0090:  DECFSZ 21,F
0091:  GOTO   08D
.................... output_b(0x99); 
0092:  MOVLW  99
0093:  MOVWF  06
.................... delay_ms(500); 
0094:  MOVLW  02
0095:  MOVWF  21
0096:  MOVLW  FA
0097:  MOVWF  22
0098:  CALL   004
0099:  DECFSZ 21,F
009A:  GOTO   096
.................... output_b(0xAA); 
009B:  MOVLW  AA
009C:  MOVWF  06
.................... delay_ms(500); 
009D:  MOVLW  02
009E:  MOVWF  21
009F:  MOVLW  FA
00A0:  MOVWF  22
00A1:  CALL   004
00A2:  DECFSZ 21,F
00A3:  GOTO   09F
.................... output_b(0xBB); 
00A4:  MOVLW  BB
00A5:  MOVWF  06
.................... delay_ms(500); 
00A6:  MOVLW  02
00A7:  MOVWF  21
00A8:  MOVLW  FA
00A9:  MOVWF  22
00AA:  CALL   004
00AB:  DECFSZ 21,F
00AC:  GOTO   0A8
.................... output_b(0xDD); 
00AD:  MOVLW  DD
00AE:  MOVWF  06
.................... delay_ms(500); 
00AF:  MOVLW  02
00B0:  MOVWF  21
00B1:  MOVLW  FA
00B2:  MOVWF  22
00B3:  CALL   004
00B4:  DECFSZ 21,F
00B5:  GOTO   0B1
.................... output_b(0xFF); 
00B6:  MOVLW  FF
00B7:  MOVWF  06
.................... delay_ms(500); 
00B8:  MOVLW  02
00B9:  MOVWF  21
00BA:  MOVLW  FA
00BB:  MOVWF  22
00BC:  CALL   004
00BD:  DECFSZ 21,F
00BE:  GOTO   0BA
.................... /* 
.................... output_high(pin_b0);  
.................... output_low(pin_b1);  
.................... output_high(pin_b2);  
.................... output_low(pin_b3);  
.................... output_high(pin_b4) ; 
.................... output_low(pin_b5); 
.................... output_high(pin_b6);  
.................... output_low(pin_b7); 
.................... */ 
.................... } 
00BF:  GOTO   042
.................... } 
00C0:  SLEEP

Configuration Fuses:
   Word  1: 2FF2   HS NOWDT NOPUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
